version: 2.1
orbs:
  ruby: circleci/ruby@1.1.2

# executorを使って実行環境の情報を定義して再利用する
executors:
  # ここに好きな名前で executorを定義できる
  default:
    # このあとのコマンド操作をするディレクトリを指定(CircleCI内のプロジェクト)
    working_directory: ~/kthr01/src
    docker:
      - image: cimg/ruby:2.7.5

jobs:
  build:
    executor: # nameで使いたいexecutorを指定する
      name: default
    steps:
      # ~/kthr01(githubのリポジトリ名)にgitリポジトリ(プロジェクト)をコピー(展開)
      - checkout:
          path: ~/kthr01
      # bundle installなどを実行
      - ruby/install-deps

  test:
    working_directory: ~/kthr01/src
    docker:
      - image: cimg/ruby:2.7.5
      - image: circleci/mysql:5.7
        # DBの環境変数を設定(database.ym)
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: app_test
    # testジョブ全体の環境変数を設定
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      APP_DATABASE_HOST: "127.0.0.1"
      RAILS_ENV: test
    steps:
      # ~/kthr01(githubのリポジトリ名)にgitリポジトリ(プロジェクト)をコピー(展開)
      - checkout:
          path: ~/kthr01
      # bundle installなどを実行
      - ruby/install-deps

      # mysqlが準備ができるまで待機し、その後処理(mysql起動後にmigrateを実行するため)
      - run:
          name: Waiting for MySQL to be ready
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      # migrateを実行
      - run:
          name: Database setup
          command: bundle exec rails db:migrate
      # test
      - run:
          name: Run test
          command: bundle exec rake test
      # brakeman
      - run:
          name: Run brakeman
          command: bundle exec brakeman -A -w1
      # rubocop
      - run:
          name: Run rubocop
          command: bundle exec rubocop

  # EC2にSSH接続し、デプロイを実行
  deploy_1:
    executor: # nameで使いたいexecutorを指定する
      name: default
    steps:
      - checkout
      # CircleCI に登録した秘密鍵を呼び出す
      - add_ssh_keys:
          fingerprints:
              - "40:8e:0f:c9:3a:db:41:57:af:33:57:76:88:3e:f0:25"
      # CircleCI に登録した環境変数を使ってSSH接続
      - run:
          name: deploy_1
          command: ssh -o 'StrictHostKeyChecking no' ${USER_NAME}@${HOST_NAME} 'cd && ./release.sh renewal'
          no_output_timeout: 30m
  # EC2にSSH接続し、デプロイを実行
  deploy_2:
    executor: # nameで使いたいexecutorを指定する
      name: default
    steps:
      - checkout
      # CircleCI に登録した環境変数を使ってSSH接続
      - run:
          name: deploy_2
          command: ssh -o 'StrictHostKeyChecking no' ${USER_NAME_2}@${HOST_NAME_2} 'cd && ./release.sh renewal'
          no_output_timeout: 30m

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy_1:
          requires:
            - test
          # mainブランチがpushされた場合のみdeployするようにする。
          filters:
            branches:
              only: main
      - deploy_2:
          requires:
            - deploy_1
